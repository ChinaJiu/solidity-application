{
	"id": "58640cc541f192fac4ecea873ccc5f2f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1-erc20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.4.16 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract MyToken is IERC20 {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) public override balanceOf;\n\n    mapping(address => mapping(address => uint256)) public override allowance;\n\n    uint256 public override totalSupply;   // 代币总供给\n\n    string public name;   // 名称\n    string public symbol;  // 代号\n    \n    uint8 public decimals = 18; // 小数位数\n    \n    constructor(string memory name_, string memory symbol_){\n        name = name_;\n        symbol = symbol_;\n    }\n\n    function transfer(address recipient, uint amount) external override returns (bool) {\n        balanceOf[msg.sender] -= amount;\n        balanceOf[recipient] += amount;\n        emit Transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function approve(address spender, uint amount) external override returns (bool) {\n        allowance[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function mint(uint amount) external {\n        balanceOf[msg.sender] += amount;\n        totalSupply += amount;\n        emit Transfer(address(0), msg.sender, amount);\n    }\n\n    function burn(uint amount) external {\n        balanceOf[msg.sender] -= amount;\n        totalSupply -= amount;\n        emit Transfer(msg.sender, address(0), amount);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) external  override returns (bool) {\n        require(_to != address(0), \"Invalid recipient address\");\n\n        require(_value <= balanceOf[_from], \"Insufficient balance\");\n\n        require(_value <= allowance[_from][msg.sender], \"Transfer amount exceeds allowance\");\n\n        balanceOf[_from] = balanceOf[_from].sub(_value);\n        balanceOf[_to] = balanceOf[_to].add(_value);\n\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\n\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n}\n    "
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/1-erc20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/1-erc20.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							}
						},
						"stateVariables": {
							"allowance": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"balanceOf": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1-erc20.sol\":186:2118  contract MyToken is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/1-erc20.sol\":557:559  18 */\n  0x12\n    /* \"contracts/1-erc20.sol\":533:559  uint8 public decimals = 18 */\n  0x05\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/1-erc20.sol\":586:696  constructor(string memory name_, string memory symbol_){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/1-erc20.sol\":658:663  name_ */\n  dup2\n    /* \"contracts/1-erc20.sol\":651:655  name */\n  0x03\n    /* \"contracts/1-erc20.sol\":651:663  name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/1-erc20.sol\":682:689  symbol_ */\n  dup1\n    /* \"contracts/1-erc20.sol\":673:679  symbol */\n  0x04\n    /* \"contracts/1-erc20.sol\":673:689  symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/1-erc20.sol\":586:696  constructor(string memory name_, string memory symbol_){... */\n  pop\n  pop\n    /* \"contracts/1-erc20.sol\":186:2118  contract MyToken is IERC20 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/1-erc20.sol\":186:2118  contract MyToken is IERC20 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/1-erc20.sol\":186:2118  contract MyToken is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/1-erc20.sol\":455:473  string public name */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":954:1163  function approve(address spender, uint amount) external override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":392:427  uint256 public override totalSupply */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":1521:2116  function transferFrom(address _from, address _to, uint256 _value) external  override returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":533:559  uint8 public decimals = 18 */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":1345:1515  function burn(uint amount) external {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/1-erc20.sol\":252:305  mapping(address => uint256) public override balanceOf */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":491:511  string public symbol */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":1169:1339  function mint(uint amount) external {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/1-erc20.sol\":702:948  function transfer(address recipient, uint amount) external override returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":312:385  mapping(address => mapping(address => uint256)) public override allowance */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1-erc20.sol\":455:473  string public name */\n    tag_16:\n      0x03\n      dup1\n      sload\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n      dup1\n      iszero\n      tag_65\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_66\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_65)\n    tag_66:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_67:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_67\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":954:1163  function approve(address spender, uint amount) external override returns (bool) {... */\n    tag_22:\n        /* \"contracts/1-erc20.sol\":1028:1032  bool */\n      0x00\n        /* \"contracts/1-erc20.sol\":1077:1083  amount */\n      dup2\n        /* \"contracts/1-erc20.sol\":1044:1053  allowance */\n      0x01\n        /* \"contracts/1-erc20.sol\":1044:1065  allowance[msg.sender] */\n      0x00\n        /* \"contracts/1-erc20.sol\":1054:1064  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":1044:1065  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1-erc20.sol\":1044:1074  allowance[msg.sender][spender] */\n      0x00\n        /* \"contracts/1-erc20.sol\":1066:1073  spender */\n      dup6\n        /* \"contracts/1-erc20.sol\":1044:1074  allowance[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1-erc20.sol\":1044:1083  allowance[msg.sender][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":1119:1126  spender */\n      dup3\n        /* \"contracts/1-erc20.sol\":1098:1135  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1-erc20.sol\":1107:1117  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":1098:1135  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/1-erc20.sol\":1128:1134  amount */\n      dup5\n        /* \"contracts/1-erc20.sol\":1098:1135  Approval(msg.sender, spender, amount) */\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1-erc20.sol\":1152:1156  true */\n      0x01\n        /* \"contracts/1-erc20.sol\":1145:1156  return true */\n      swap1\n      pop\n        /* \"contracts/1-erc20.sol\":954:1163  function approve(address spender, uint amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":392:427  uint256 public override totalSupply */\n    tag_26:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":1521:2116  function transferFrom(address _from, address _to, uint256 _value) external  override returns (bool) {... */\n    tag_32:\n        /* \"contracts/1-erc20.sol\":1615:1619  bool */\n      0x00\n        /* \"contracts/1-erc20.sol\":1654:1655  0 */\n      dup1\n        /* \"contracts/1-erc20.sol\":1639:1656  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1-erc20.sol\":1639:1642  _to */\n      dup4\n        /* \"contracts/1-erc20.sol\":1639:1656  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/1-erc20.sol\":1631:1686  require(_to != address(0), \"Invalid recipient address\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/1-erc20.sol\":1715:1724  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":1715:1731  balanceOf[_from] */\n      dup1\n        /* \"contracts/1-erc20.sol\":1725:1730  _from */\n      dup6\n        /* \"contracts/1-erc20.sol\":1715:1731  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1-erc20.sol\":1705:1711  _value */\n      dup3\n        /* \"contracts/1-erc20.sol\":1705:1731  _value <= balanceOf[_from] */\n      gt\n      iszero\n        /* \"contracts/1-erc20.sol\":1697:1756  require(_value <= balanceOf[_from], \"Insufficient balance\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/1-erc20.sol\":1785:1794  allowance */\n      0x01\n        /* \"contracts/1-erc20.sol\":1785:1801  allowance[_from] */\n      0x00\n        /* \"contracts/1-erc20.sol\":1795:1800  _from */\n      dup6\n        /* \"contracts/1-erc20.sol\":1785:1801  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1-erc20.sol\":1785:1813  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/1-erc20.sol\":1802:1812  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":1785:1813  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1-erc20.sol\":1775:1781  _value */\n      dup3\n        /* \"contracts/1-erc20.sol\":1775:1813  _value <= allowance[_from][msg.sender] */\n      gt\n      iszero\n        /* \"contracts/1-erc20.sol\":1767:1851  require(_value <= allowance[_from][msg.sender], \"Transfer amount exceeds allowance\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/1-erc20.sol\":1881:1909  balanceOf[_from].sub(_value) */\n      tag_80\n        /* \"contracts/1-erc20.sol\":1902:1908  _value */\n      dup3\n        /* \"contracts/1-erc20.sol\":1881:1890  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":1881:1897  balanceOf[_from] */\n      dup1\n        /* \"contracts/1-erc20.sol\":1891:1896  _from */\n      dup8\n        /* \"contracts/1-erc20.sol\":1881:1897  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1-erc20.sol\":1881:1901  balanceOf[_from].sub */\n      tag_81\n      swap1\n        /* \"contracts/1-erc20.sol\":1881:1909  balanceOf[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"contracts/1-erc20.sol\":1862:1871  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":1862:1878  balanceOf[_from] */\n      dup1\n        /* \"contracts/1-erc20.sol\":1872:1877  _from */\n      dup7\n        /* \"contracts/1-erc20.sol\":1862:1878  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1-erc20.sol\":1862:1909  balanceOf[_from] = balanceOf[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":1936:1962  balanceOf[_to].add(_value) */\n      tag_82\n        /* \"contracts/1-erc20.sol\":1955:1961  _value */\n      dup3\n        /* \"contracts/1-erc20.sol\":1936:1945  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":1936:1950  balanceOf[_to] */\n      dup1\n        /* \"contracts/1-erc20.sol\":1946:1949  _to */\n      dup7\n        /* \"contracts/1-erc20.sol\":1936:1950  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1-erc20.sol\":1936:1954  balanceOf[_to].add */\n      tag_83\n      swap1\n        /* \"contracts/1-erc20.sol\":1936:1962  balanceOf[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"contracts/1-erc20.sol\":1919:1928  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":1919:1933  balanceOf[_to] */\n      dup1\n        /* \"contracts/1-erc20.sol\":1929:1932  _to */\n      dup6\n        /* \"contracts/1-erc20.sol\":1919:1933  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1-erc20.sol\":1919:1962  balanceOf[_to] = balanceOf[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":2004:2044  allowance[_from][msg.sender].sub(_value) */\n      tag_84\n        /* \"contracts/1-erc20.sol\":2037:2043  _value */\n      dup3\n        /* \"contracts/1-erc20.sol\":2004:2013  allowance */\n      0x01\n        /* \"contracts/1-erc20.sol\":2004:2020  allowance[_from] */\n      0x00\n        /* \"contracts/1-erc20.sol\":2014:2019  _from */\n      dup8\n        /* \"contracts/1-erc20.sol\":2004:2020  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1-erc20.sol\":2004:2032  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/1-erc20.sol\":2021:2031  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":2004:2032  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1-erc20.sol\":2004:2036  allowance[_from][msg.sender].sub */\n      tag_81\n      swap1\n        /* \"contracts/1-erc20.sol\":2004:2044  allowance[_from][msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"contracts/1-erc20.sol\":1973:1982  allowance */\n      0x01\n        /* \"contracts/1-erc20.sol\":1973:1989  allowance[_from] */\n      0x00\n        /* \"contracts/1-erc20.sol\":1983:1988  _from */\n      dup7\n        /* \"contracts/1-erc20.sol\":1973:1989  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1-erc20.sol\":1973:2001  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/1-erc20.sol\":1990:2000  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":1973:2001  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1-erc20.sol\":1973:2044  allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":2076:2079  _to */\n      dup3\n        /* \"contracts/1-erc20.sol\":2060:2088  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1-erc20.sol\":2069:2074  _from */\n      dup5\n        /* \"contracts/1-erc20.sol\":2060:2088  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/1-erc20.sol\":2081:2087  _value */\n      dup5\n        /* \"contracts/1-erc20.sol\":2060:2088  Transfer(_from, _to, _value) */\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1-erc20.sol\":2105:2109  true */\n      0x01\n        /* \"contracts/1-erc20.sol\":2098:2109  return true */\n      swap1\n      pop\n        /* \"contracts/1-erc20.sol\":1521:2116  function transferFrom(address _from, address _to, uint256 _value) external  override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":533:559  uint8 public decimals = 18 */\n    tag_35:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":1345:1515  function burn(uint amount) external {... */\n    tag_41:\n        /* \"contracts/1-erc20.sol\":1416:1422  amount */\n      dup1\n        /* \"contracts/1-erc20.sol\":1391:1400  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":1391:1412  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/1-erc20.sol\":1401:1411  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":1391:1412  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1-erc20.sol\":1391:1422  balanceOf[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":1447:1453  amount */\n      dup1\n        /* \"contracts/1-erc20.sol\":1432:1443  totalSupply */\n      0x02\n      0x00\n        /* \"contracts/1-erc20.sol\":1432:1453  totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_89\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":1497:1498  0 */\n      0x00\n        /* \"contracts/1-erc20.sol\":1468:1508  Transfer(msg.sender, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1-erc20.sol\":1477:1487  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":1468:1508  Transfer(msg.sender, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/1-erc20.sol\":1501:1507  amount */\n      dup4\n        /* \"contracts/1-erc20.sol\":1468:1508  Transfer(msg.sender, address(0), amount) */\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1-erc20.sol\":1345:1515  function burn(uint amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":252:305  mapping(address => uint256) public override balanceOf */\n    tag_45:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":491:511  string public symbol */\n    tag_48:\n      0x04\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_63\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_63\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":1169:1339  function mint(uint amount) external {... */\n    tag_52:\n        /* \"contracts/1-erc20.sol\":1240:1246  amount */\n      dup1\n        /* \"contracts/1-erc20.sol\":1215:1224  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":1215:1236  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/1-erc20.sol\":1225:1235  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":1215:1236  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1-erc20.sol\":1215:1246  balanceOf[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":1271:1277  amount */\n      dup1\n        /* \"contracts/1-erc20.sol\":1256:1267  totalSupply */\n      0x02\n      0x00\n        /* \"contracts/1-erc20.sol\":1256:1277  totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_99\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":1313:1323  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":1292:1332  Transfer(address(0), msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1-erc20.sol\":1309:1310  0 */\n      0x00\n        /* \"contracts/1-erc20.sol\":1292:1332  Transfer(address(0), msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/1-erc20.sol\":1325:1331  amount */\n      dup4\n        /* \"contracts/1-erc20.sol\":1292:1332  Transfer(address(0), msg.sender, amount) */\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1-erc20.sol\":1169:1339  function mint(uint amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":702:948  function transfer(address recipient, uint amount) external override returns (bool) {... */\n    tag_55:\n        /* \"contracts/1-erc20.sol\":779:783  bool */\n      0x00\n        /* \"contracts/1-erc20.sol\":820:826  amount */\n      dup2\n        /* \"contracts/1-erc20.sol\":795:804  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":795:816  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/1-erc20.sol\":805:815  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":795:816  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1-erc20.sol\":795:826  balanceOf[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_102\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_102:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":860:866  amount */\n      dup2\n        /* \"contracts/1-erc20.sol\":836:845  balanceOf */\n      0x00\n        /* \"contracts/1-erc20.sol\":836:856  balanceOf[recipient] */\n      dup1\n        /* \"contracts/1-erc20.sol\":846:855  recipient */\n      dup6\n        /* \"contracts/1-erc20.sol\":836:856  balanceOf[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1-erc20.sol\":836:866  balanceOf[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_103\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_103:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1-erc20.sol\":902:911  recipient */\n      dup3\n        /* \"contracts/1-erc20.sol\":881:920  Transfer(msg.sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1-erc20.sol\":890:900  msg.sender */\n      caller\n        /* \"contracts/1-erc20.sol\":881:920  Transfer(msg.sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/1-erc20.sol\":913:919  amount */\n      dup5\n        /* \"contracts/1-erc20.sol\":881:920  Transfer(msg.sender, recipient, amount) */\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1-erc20.sol\":937:941  true */\n      0x01\n        /* \"contracts/1-erc20.sol\":930:941  return true */\n      swap1\n      pop\n        /* \"contracts/1-erc20.sol\":702:948  function transfer(address recipient, uint amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1-erc20.sol\":312:385  mapping(address => mapping(address => uint256)) public override allowance */\n    tag_60:\n      mstore(0x20, 0x01)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_106\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_108\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_109:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_110:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_111:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_141:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_141)\n    tag_143:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_112:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_113:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_146\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_109\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":818:889   */\n      tag_147\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_110\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_148\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_111\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":988:1017   */\n      tag_149\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_112\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_151\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_113\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_115:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_117:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_118:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_157\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_117\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_119:\n        /* \"#utility.yul\":1983:2007   */\n      tag_159\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_118\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_160:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_120:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_162\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_119\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_121:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_122:\n        /* \"#utility.yul\":2339:2363   */\n      tag_165\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_121\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_166:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_123:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_168\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_122\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_171\n      tag_115\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2632:2751   */\n    tag_170:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_172\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_120\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_173\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_123\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_124:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_125:\n        /* \"#utility.yul\":3196:3217   */\n      tag_176\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_124\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_178\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_125\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_126:\n        /* \"#utility.yul\":3533:3557   */\n      tag_180\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_121\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_182\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_126\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_185\n      tag_115\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3908:4027   */\n    tag_184:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_186\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_120\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_187\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_120\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_188\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_123\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_127:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_128:\n        /* \"#utility.yul\":4598:4620   */\n      tag_191\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_127\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_193\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_128\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_40:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_196\n      tag_115\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4929:5048   */\n    tag_195:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_197\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_123\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_44:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_200\n      tag_115\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5264:5383   */\n    tag_199:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_201\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_120\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5997   */\n    tag_59:\n        /* \"#utility.yul\":5591:5597   */\n      0x00\n        /* \"#utility.yul\":5599:5605   */\n      dup1\n        /* \"#utility.yul\":5648:5650   */\n      0x40\n        /* \"#utility.yul\":5636:5645   */\n      dup4\n        /* \"#utility.yul\":5627:5634   */\n      dup6\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5735   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":5654:5733   */\n      tag_204\n      tag_115\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5616:5735   */\n    tag_203:\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5799:5852   */\n      tag_205\n        /* \"#utility.yul\":5844:5851   */\n      dup6\n        /* \"#utility.yul\":5835:5841   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup7\n        /* \"#utility.yul\":5820:5842   */\n      add\n        /* \"#utility.yul\":5799:5852   */\n      tag_120\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5789:5852   */\n      swap3\n      pop\n        /* \"#utility.yul\":5745:5862   */\n      pop\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"#utility.yul\":5927:5980   */\n      tag_206\n        /* \"#utility.yul\":5972:5979   */\n      dup6\n        /* \"#utility.yul\":5963:5969   */\n      dup3\n        /* \"#utility.yul\":5952:5961   */\n      dup7\n        /* \"#utility.yul\":5948:5970   */\n      add\n        /* \"#utility.yul\":5927:5980   */\n      tag_120\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5917:5980   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5990   */\n      pop\n        /* \"#utility.yul\":5523:5997   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6003:6183   */\n    tag_129:\n        /* \"#utility.yul\":6051:6128   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6048:6049   */\n      0x00\n        /* \"#utility.yul\":6041:6129   */\n      mstore\n        /* \"#utility.yul\":6148:6152   */\n      0x22\n        /* \"#utility.yul\":6145:6146   */\n      0x04\n        /* \"#utility.yul\":6138:6153   */\n      mstore\n        /* \"#utility.yul\":6172:6176   */\n      0x24\n        /* \"#utility.yul\":6169:6170   */\n      0x00\n        /* \"#utility.yul\":6162:6177   */\n      revert\n        /* \"#utility.yul\":6189:6509   */\n    tag_63:\n        /* \"#utility.yul\":6233:6239   */\n      0x00\n        /* \"#utility.yul\":6270:6271   */\n      0x02\n        /* \"#utility.yul\":6264:6268   */\n      dup3\n        /* \"#utility.yul\":6260:6272   */\n      div\n        /* \"#utility.yul\":6250:6272   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6318   */\n      0x01\n        /* \"#utility.yul\":6311:6315   */\n      dup3\n        /* \"#utility.yul\":6307:6319   */\n      and\n        /* \"#utility.yul\":6338:6356   */\n      dup1\n        /* \"#utility.yul\":6328:6409   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6394:6398   */\n      0x7f\n        /* \"#utility.yul\":6386:6392   */\n      dup3\n        /* \"#utility.yul\":6382:6399   */\n      and\n        /* \"#utility.yul\":6372:6399   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6409   */\n    tag_209:\n        /* \"#utility.yul\":6456:6458   */\n      0x20\n        /* \"#utility.yul\":6448:6454   */\n      dup3\n        /* \"#utility.yul\":6445:6459   */\n      lt\n        /* \"#utility.yul\":6425:6443   */\n      dup2\n        /* \"#utility.yul\":6422:6460   */\n      sub\n        /* \"#utility.yul\":6419:6503   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":6475:6493   */\n      tag_211\n      tag_129\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6419:6503   */\n    tag_210:\n        /* \"#utility.yul\":6240:6509   */\n      pop\n        /* \"#utility.yul\":6189:6509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6515:6690   */\n    tag_130:\n        /* \"#utility.yul\":6655:6682   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":6651:6652   */\n      0x00\n        /* \"#utility.yul\":6643:6649   */\n      dup3\n        /* \"#utility.yul\":6639:6653   */\n      add\n        /* \"#utility.yul\":6632:6683   */\n      mstore\n        /* \"#utility.yul\":6515:6690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6696:7062   */\n    tag_131:\n        /* \"#utility.yul\":6838:6841   */\n      0x00\n        /* \"#utility.yul\":6859:6926   */\n      tag_214\n        /* \"#utility.yul\":6923:6925   */\n      0x19\n        /* \"#utility.yul\":6918:6921   */\n      dup4\n        /* \"#utility.yul\":6859:6926   */\n      tag_110\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6852:6926   */\n      swap2\n      pop\n        /* \"#utility.yul\":6935:7028   */\n      tag_215\n        /* \"#utility.yul\":7024:7027   */\n      dup3\n        /* \"#utility.yul\":6935:7028   */\n      tag_130\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":7053:7055   */\n      0x20\n        /* \"#utility.yul\":7048:7051   */\n      dup3\n        /* \"#utility.yul\":7044:7056   */\n      add\n        /* \"#utility.yul\":7037:7056   */\n      swap1\n      pop\n        /* \"#utility.yul\":6696:7062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7068:7487   */\n    tag_73:\n        /* \"#utility.yul\":7234:7238   */\n      0x00\n        /* \"#utility.yul\":7272:7274   */\n      0x20\n        /* \"#utility.yul\":7261:7270   */\n      dup3\n        /* \"#utility.yul\":7257:7275   */\n      add\n        /* \"#utility.yul\":7249:7275   */\n      swap1\n      pop\n        /* \"#utility.yul\":7321:7330   */\n      dup2\n        /* \"#utility.yul\":7315:7319   */\n      dup2\n        /* \"#utility.yul\":7311:7331   */\n      sub\n        /* \"#utility.yul\":7307:7308   */\n      0x00\n        /* \"#utility.yul\":7296:7305   */\n      dup4\n        /* \"#utility.yul\":7292:7309   */\n      add\n        /* \"#utility.yul\":7285:7332   */\n      mstore\n        /* \"#utility.yul\":7349:7480   */\n      tag_217\n        /* \"#utility.yul\":7475:7479   */\n      dup2\n        /* \"#utility.yul\":7349:7480   */\n      tag_131\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7341:7480   */\n      swap1\n      pop\n        /* \"#utility.yul\":7068:7487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7493:7663   */\n    tag_132:\n        /* \"#utility.yul\":7633:7655   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":7629:7630   */\n      0x00\n        /* \"#utility.yul\":7621:7627   */\n      dup3\n        /* \"#utility.yul\":7617:7631   */\n      add\n        /* \"#utility.yul\":7610:7656   */\n      mstore\n        /* \"#utility.yul\":7493:7663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7669:8035   */\n    tag_133:\n        /* \"#utility.yul\":7811:7814   */\n      0x00\n        /* \"#utility.yul\":7832:7899   */\n      tag_220\n        /* \"#utility.yul\":7896:7898   */\n      0x14\n        /* \"#utility.yul\":7891:7894   */\n      dup4\n        /* \"#utility.yul\":7832:7899   */\n      tag_110\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7825:7899   */\n      swap2\n      pop\n        /* \"#utility.yul\":7908:8001   */\n      tag_221\n        /* \"#utility.yul\":7997:8000   */\n      dup3\n        /* \"#utility.yul\":7908:8001   */\n      tag_132\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8026:8028   */\n      0x20\n        /* \"#utility.yul\":8021:8024   */\n      dup3\n        /* \"#utility.yul\":8017:8029   */\n      add\n        /* \"#utility.yul\":8010:8029   */\n      swap1\n      pop\n        /* \"#utility.yul\":7669:8035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8041:8460   */\n    tag_76:\n        /* \"#utility.yul\":8207:8211   */\n      0x00\n        /* \"#utility.yul\":8245:8247   */\n      0x20\n        /* \"#utility.yul\":8234:8243   */\n      dup3\n        /* \"#utility.yul\":8230:8248   */\n      add\n        /* \"#utility.yul\":8222:8248   */\n      swap1\n      pop\n        /* \"#utility.yul\":8294:8303   */\n      dup2\n        /* \"#utility.yul\":8288:8292   */\n      dup2\n        /* \"#utility.yul\":8284:8304   */\n      sub\n        /* \"#utility.yul\":8280:8281   */\n      0x00\n        /* \"#utility.yul\":8269:8278   */\n      dup4\n        /* \"#utility.yul\":8265:8282   */\n      add\n        /* \"#utility.yul\":8258:8305   */\n      mstore\n        /* \"#utility.yul\":8322:8453   */\n      tag_223\n        /* \"#utility.yul\":8448:8452   */\n      dup2\n        /* \"#utility.yul\":8322:8453   */\n      tag_133\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8314:8453   */\n      swap1\n      pop\n        /* \"#utility.yul\":8041:8460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8466:8686   */\n    tag_134:\n        /* \"#utility.yul\":8606:8640   */\n      0x5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63\n        /* \"#utility.yul\":8602:8603   */\n      0x00\n        /* \"#utility.yul\":8594:8600   */\n      dup3\n        /* \"#utility.yul\":8590:8604   */\n      add\n        /* \"#utility.yul\":8583:8641   */\n      mstore\n        /* \"#utility.yul\":8675:8678   */\n      0x6500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8670:8672   */\n      0x20\n        /* \"#utility.yul\":8662:8668   */\n      dup3\n        /* \"#utility.yul\":8658:8673   */\n      add\n        /* \"#utility.yul\":8651:8679   */\n      mstore\n        /* \"#utility.yul\":8466:8686   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8692:9058   */\n    tag_135:\n        /* \"#utility.yul\":8834:8837   */\n      0x00\n        /* \"#utility.yul\":8855:8922   */\n      tag_226\n        /* \"#utility.yul\":8919:8921   */\n      0x21\n        /* \"#utility.yul\":8914:8917   */\n      dup4\n        /* \"#utility.yul\":8855:8922   */\n      tag_110\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":8848:8922   */\n      swap2\n      pop\n        /* \"#utility.yul\":8931:9024   */\n      tag_227\n        /* \"#utility.yul\":9020:9023   */\n      dup3\n        /* \"#utility.yul\":8931:9024   */\n      tag_134\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9049:9051   */\n      0x40\n        /* \"#utility.yul\":9044:9047   */\n      dup3\n        /* \"#utility.yul\":9040:9052   */\n      add\n        /* \"#utility.yul\":9033:9052   */\n      swap1\n      pop\n        /* \"#utility.yul\":8692:9058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9064:9483   */\n    tag_79:\n        /* \"#utility.yul\":9230:9234   */\n      0x00\n        /* \"#utility.yul\":9268:9270   */\n      0x20\n        /* \"#utility.yul\":9257:9266   */\n      dup3\n        /* \"#utility.yul\":9253:9271   */\n      add\n        /* \"#utility.yul\":9245:9271   */\n      swap1\n      pop\n        /* \"#utility.yul\":9317:9326   */\n      dup2\n        /* \"#utility.yul\":9311:9315   */\n      dup2\n        /* \"#utility.yul\":9307:9327   */\n      sub\n        /* \"#utility.yul\":9303:9304   */\n      0x00\n        /* \"#utility.yul\":9292:9301   */\n      dup4\n        /* \"#utility.yul\":9288:9305   */\n      add\n        /* \"#utility.yul\":9281:9328   */\n      mstore\n        /* \"#utility.yul\":9345:9476   */\n      tag_229\n        /* \"#utility.yul\":9471:9475   */\n      dup2\n        /* \"#utility.yul\":9345:9476   */\n      tag_135\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9337:9476   */\n      swap1\n      pop\n        /* \"#utility.yul\":9064:9483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9489:9669   */\n    tag_136:\n        /* \"#utility.yul\":9537:9614   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9534:9535   */\n      0x00\n        /* \"#utility.yul\":9527:9615   */\n      mstore\n        /* \"#utility.yul\":9634:9638   */\n      0x11\n        /* \"#utility.yul\":9631:9632   */\n      0x04\n        /* \"#utility.yul\":9624:9639   */\n      mstore\n        /* \"#utility.yul\":9658:9662   */\n      0x24\n        /* \"#utility.yul\":9655:9656   */\n      0x00\n        /* \"#utility.yul\":9648:9663   */\n      revert\n        /* \"#utility.yul\":9675:9869   */\n    tag_88:\n        /* \"#utility.yul\":9715:9719   */\n      0x00\n        /* \"#utility.yul\":9735:9755   */\n      tag_232\n        /* \"#utility.yul\":9753:9754   */\n      dup3\n        /* \"#utility.yul\":9735:9755   */\n      tag_121\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":9730:9755   */\n      swap2\n      pop\n        /* \"#utility.yul\":9769:9789   */\n      tag_233\n        /* \"#utility.yul\":9787:9788   */\n      dup4\n        /* \"#utility.yul\":9769:9789   */\n      tag_121\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":9764:9789   */\n      swap3\n      pop\n        /* \"#utility.yul\":9813:9814   */\n      dup3\n        /* \"#utility.yul\":9810:9811   */\n      dup3\n        /* \"#utility.yul\":9806:9815   */\n      sub\n        /* \"#utility.yul\":9798:9815   */\n      swap1\n      pop\n        /* \"#utility.yul\":9837:9838   */\n      dup2\n        /* \"#utility.yul\":9831:9835   */\n      dup2\n        /* \"#utility.yul\":9828:9839   */\n      gt\n        /* \"#utility.yul\":9825:9862   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":9842:9860   */\n      tag_235\n      tag_136\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":9825:9862   */\n    tag_234:\n        /* \"#utility.yul\":9675:9869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9875:10066   */\n    tag_98:\n        /* \"#utility.yul\":9915:9918   */\n      0x00\n        /* \"#utility.yul\":9934:9954   */\n      tag_237\n        /* \"#utility.yul\":9952:9953   */\n      dup3\n        /* \"#utility.yul\":9934:9954   */\n      tag_121\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9929:9954   */\n      swap2\n      pop\n        /* \"#utility.yul\":9968:9988   */\n      tag_238\n        /* \"#utility.yul\":9986:9987   */\n      dup4\n        /* \"#utility.yul\":9968:9988   */\n      tag_121\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":9963:9988   */\n      swap3\n      pop\n        /* \"#utility.yul\":10011:10012   */\n      dup3\n        /* \"#utility.yul\":10008:10009   */\n      dup3\n        /* \"#utility.yul\":10004:10013   */\n      add\n        /* \"#utility.yul\":9997:10013   */\n      swap1\n      pop\n        /* \"#utility.yul\":10032:10035   */\n      dup1\n        /* \"#utility.yul\":10029:10030   */\n      dup3\n        /* \"#utility.yul\":10026:10036   */\n      gt\n        /* \"#utility.yul\":10023:10059   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":10039:10057   */\n      tag_240\n      tag_136\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":10023:10059   */\n    tag_239:\n        /* \"#utility.yul\":9875:10066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122062eaf8eedcc33df208c64531724f8c135ffbff3564fadf1cf3a055759d6e727264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_436": {
									"entryPoint": null,
									"id": 436,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:3",
														"type": ""
													}
												],
												"src": "580:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:3"
															},
															"nodeType": "YulIf",
															"src": "1030:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:3",
														"type": ""
													}
												],
												"src": "874:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:3",
														"type": ""
													}
												],
												"src": "1161:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:3"
															},
															"nodeType": "YulIf",
															"src": "1434:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:3",
														"type": ""
													}
												],
												"src": "1296:308:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:3",
																"statements": []
															},
															"src": "1701:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:3",
														"type": ""
													}
												],
												"src": "1610:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:3"
															},
															"nodeType": "YulIf",
															"src": "2117:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:3",
														"type": ""
													}
												],
												"src": "1862:434:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:3"
															},
															"nodeType": "YulIf",
															"src": "2399:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:3",
														"type": ""
													}
												],
												"src": "2316:355:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:3"
															},
															"nodeType": "YulIf",
															"src": "2801:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:3",
														"type": ""
													}
												],
												"src": "2677:853:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:3",
														"type": ""
													}
												],
												"src": "3536:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:3"
															},
															"nodeType": "YulIf",
															"src": "3966:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:3"
															},
															"nodeType": "YulIf",
															"src": "4057:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:3",
														"type": ""
													}
												],
												"src": "3827:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:3",
														"type": ""
													}
												],
												"src": "4153:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:3"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:3",
														"type": ""
													}
												],
												"src": "4300:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:3"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:3",
														"type": ""
													}
												],
												"src": "4399:107:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:3",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:3"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:3"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:3"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:3"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:3"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:3"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:3",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:3",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:3",
														"type": ""
													}
												],
												"src": "4512:393:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:3",
														"type": ""
													}
												],
												"src": "4911:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:3",
														"type": ""
													}
												],
												"src": "4994:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:3",
														"type": ""
													}
												],
												"src": "5060:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:3"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:3",
														"type": ""
													}
												],
												"src": "5208:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:3",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:3"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:3"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:3"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:3"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:3",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:3",
														"type": ""
													}
												],
												"src": "5289:269:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:3",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:3"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:3",
														"type": ""
													}
												],
												"src": "5564:73:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:3"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:3"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:3"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:3"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:3",
														"type": ""
													}
												],
												"src": "5643:189:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:3",
																"statements": []
															},
															"src": "5898:120:3"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:3",
														"type": ""
													}
												],
												"src": "5838:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:3"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:3"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:3"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:3",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:3"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:3"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:3"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:3"
															},
															"nodeType": "YulIf",
															"src": "6120:446:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:3",
														"type": ""
													}
												],
												"src": "6030:543:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:3",
														"type": ""
													}
												],
												"src": "6579:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:3",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:3"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:3"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:3"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:3",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:3",
														"type": ""
													}
												],
												"src": "6702:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:3"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:3"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:3",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:3",
														"type": ""
													}
												],
												"src": "6876:295:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:3"
															},
															"nodeType": "YulIf",
															"src": "7381:56:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:3"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:3"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:3"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:3"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:3"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:3",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:3",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:3"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:3",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:3",
																					"statements": []
																				},
																				"src": "7867:208:3"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:3",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:3"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:3",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:3"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:3"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:3"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:3",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:3"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:3"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:3"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:3",
														"type": ""
													}
												],
												"src": "7176:1395:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526012600560006101000a81548160ff021916908360ff1602179055503480156200002d57600080fd5b506040516200177b3803806200177b833981810160405281019062000053919062000212565b8160039081620000649190620004e2565b508060049081620000769190620004e2565b505050620005c9565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e8826200009d565b810181811067ffffffffffffffff821117156200010a5762000109620000ae565b5b80604052505050565b60006200011f6200007f565b90506200012d8282620000dd565b919050565b600067ffffffffffffffff82111562000150576200014f620000ae565b5b6200015b826200009d565b9050602081019050919050565b60005b83811015620001885780820151818401526020810190506200016b565b60008484015250505050565b6000620001ab620001a58462000132565b62000113565b905082815260208101848484011115620001ca57620001c962000098565b5b620001d784828562000168565b509392505050565b600082601f830112620001f757620001f662000093565b5b81516200020984826020860162000194565b91505092915050565b600080604083850312156200022c576200022b62000089565b5b600083015167ffffffffffffffff8111156200024d576200024c6200008e565b5b6200025b85828601620001df565b925050602083015167ffffffffffffffff8111156200027f576200027e6200008e565b5b6200028d85828601620001df565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ea57607f821691505b6020821081036200030057620002ff620002a2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200036a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200032b565b6200037686836200032b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003c3620003bd620003b7846200038e565b62000398565b6200038e565b9050919050565b6000819050919050565b620003df83620003a2565b620003f7620003ee82620003ca565b84845462000338565b825550505050565b600090565b6200040e620003ff565b6200041b818484620003d4565b505050565b5b8181101562000443576200043760008262000404565b60018101905062000421565b5050565b601f82111562000492576200045c8162000306565b62000467846200031b565b8101602085101562000477578190505b6200048f62000486856200031b565b83018262000420565b50505b505050565b600082821c905092915050565b6000620004b76000198460080262000497565b1980831691505092915050565b6000620004d28383620004a4565b9150826002028217905092915050565b620004ed8262000297565b67ffffffffffffffff811115620005095762000508620000ae565b5b620005158254620002d1565b6200052282828562000447565b600060209050601f8311600181146200055a576000841562000545578287015190505b620005518582620004c4565b865550620005c1565b601f1984166200056a8662000306565b60005b8281101562000594578489015182556001820191506020850194506020810190506200056d565b86831015620005b45784890151620005b0601f891682620004a4565b8355505b6001600288020188555050505b505050505050565b6111a280620005d96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806342966c681161007157806342966c681461016857806370a082311461018457806395d89b41146101b4578063a0712d68146101d2578063a9059cbb146101ee578063dd62ed3e1461021e576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b661024e565b6040516100c39190610c8c565b60405180910390f35b6100e660048036038101906100e19190610d47565b6102dc565b6040516100f39190610da2565b60405180910390f35b6101046103ce565b6040516101119190610dcc565b60405180910390f35b610134600480360381019061012f9190610de7565b6103d4565b6040516101419190610da2565b60405180910390f35b610152610829565b60405161015f9190610e56565b60405180910390f35b610182600480360381019061017d9190610e71565b61083c565b005b61019e60048036038101906101999190610e9e565b610913565b6040516101ab9190610dcc565b60405180910390f35b6101bc61092b565b6040516101c99190610c8c565b60405180910390f35b6101ec60048036038101906101e79190610e71565b6109b9565b005b61020860048036038101906102039190610d47565b610a90565b6040516102159190610da2565b60405180910390f35b61023860048036038101906102339190610ecb565b610bab565b6040516102459190610dcc565b60405180910390f35b6003805461025b90610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461028790610f3a565b80156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103bc9190610dcc565b60405180910390a36001905092915050565b60025481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610fb7565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90611023565b60405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b906110b5565b60405180910390fd5b6105d5826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bd090919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610668826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be690919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061073982600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bd090919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108169190610dcc565b60405180910390a3600190509392505050565b600560009054906101000a900460ff1681565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088a9190611104565b9250508190555080600260008282546108a39190611104565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109089190610dcc565b60405180910390a350565b60006020528060005260406000206000915090505481565b6004805461093890610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461096490610f3a565b80156109b15780601f10610986576101008083540402835291602001916109b1565b820191906000526020600020905b81548152906001019060200180831161099457829003601f168201915b505050505081565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a079190611138565b925050819055508060026000828254610a209190611138565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a859190610dcc565b60405180910390a350565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ae09190611104565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b359190611138565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b999190610dcc565b60405180910390a36001905092915050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60008183610bde9190611104565b905092915050565b60008183610bf49190611138565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c36578082015181840152602081019050610c1b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c5e82610bfc565b610c688185610c07565b9350610c78818560208601610c18565b610c8181610c42565b840191505092915050565b60006020820190508181036000830152610ca68184610c53565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cde82610cb3565b9050919050565b610cee81610cd3565b8114610cf957600080fd5b50565b600081359050610d0b81610ce5565b92915050565b6000819050919050565b610d2481610d11565b8114610d2f57600080fd5b50565b600081359050610d4181610d1b565b92915050565b60008060408385031215610d5e57610d5d610cae565b5b6000610d6c85828601610cfc565b9250506020610d7d85828601610d32565b9150509250929050565b60008115159050919050565b610d9c81610d87565b82525050565b6000602082019050610db76000830184610d93565b92915050565b610dc681610d11565b82525050565b6000602082019050610de16000830184610dbd565b92915050565b600080600060608486031215610e0057610dff610cae565b5b6000610e0e86828701610cfc565b9350506020610e1f86828701610cfc565b9250506040610e3086828701610d32565b9150509250925092565b600060ff82169050919050565b610e5081610e3a565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b600060208284031215610e8757610e86610cae565b5b6000610e9584828501610d32565b91505092915050565b600060208284031215610eb457610eb3610cae565b5b6000610ec284828501610cfc565b91505092915050565b60008060408385031215610ee257610ee1610cae565b5b6000610ef085828601610cfc565b9250506020610f0185828601610cfc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f5257607f821691505b602082108103610f6557610f64610f0b565b5b50919050565b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b6000610fa1601983610c07565b9150610fac82610f6b565b602082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061100d601483610c07565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6360008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b600061109f602183610c07565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110f82610d11565b915061111a83610d11565b9250828203905081811115611132576111316110d5565b5b92915050565b600061114382610d11565b915061114e83610d11565b9250828201905080821115611166576111656110d5565b5b9291505056fea264697066735822122062eaf8eedcc33df208c64531724f8c135ffbff3564fadf1cf3a055759d6e727264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x177B CODESIZE SUB DUP1 PUSH3 0x177B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x53 SWAP2 SWAP1 PUSH3 0x212 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x64 SWAP2 SWAP1 PUSH3 0x4E2 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x76 SWAP2 SWAP1 PUSH3 0x4E2 JUMP JUMPDEST POP POP POP PUSH3 0x5C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xE8 DUP3 PUSH3 0x9D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10A JUMPI PUSH3 0x109 PUSH3 0xAE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11F PUSH3 0x7F JUMP JUMPDEST SWAP1 POP PUSH3 0x12D DUP3 DUP3 PUSH3 0xDD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x150 JUMPI PUSH3 0x14F PUSH3 0xAE JUMP JUMPDEST JUMPDEST PUSH3 0x15B DUP3 PUSH3 0x9D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x188 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AB PUSH3 0x1A5 DUP5 PUSH3 0x132 JUMP JUMPDEST PUSH3 0x113 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1CA JUMPI PUSH3 0x1C9 PUSH3 0x98 JUMP JUMPDEST JUMPDEST PUSH3 0x1D7 DUP5 DUP3 DUP6 PUSH3 0x168 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1F7 JUMPI PUSH3 0x1F6 PUSH3 0x93 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x209 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x194 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x22C JUMPI PUSH3 0x22B PUSH3 0x89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x8E JUMP JUMPDEST JUMPDEST PUSH3 0x25B DUP6 DUP3 DUP7 ADD PUSH3 0x1DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x27F JUMPI PUSH3 0x27E PUSH3 0x8E JUMP JUMPDEST JUMPDEST PUSH3 0x28D DUP6 DUP3 DUP7 ADD PUSH3 0x1DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x300 JUMPI PUSH3 0x2FF PUSH3 0x2A2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x36A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x32B JUMP JUMPDEST PUSH3 0x376 DUP7 DUP4 PUSH3 0x32B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C3 PUSH3 0x3BD PUSH3 0x3B7 DUP5 PUSH3 0x38E JUMP JUMPDEST PUSH3 0x398 JUMP JUMPDEST PUSH3 0x38E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3DF DUP4 PUSH3 0x3A2 JUMP JUMPDEST PUSH3 0x3F7 PUSH3 0x3EE DUP3 PUSH3 0x3CA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x338 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x40E PUSH3 0x3FF JUMP JUMPDEST PUSH3 0x41B DUP2 DUP5 DUP5 PUSH3 0x3D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x443 JUMPI PUSH3 0x437 PUSH1 0x0 DUP3 PUSH3 0x404 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x421 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x492 JUMPI PUSH3 0x45C DUP2 PUSH3 0x306 JUMP JUMPDEST PUSH3 0x467 DUP5 PUSH3 0x31B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x477 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x48F PUSH3 0x486 DUP6 PUSH3 0x31B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x420 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x497 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D2 DUP4 DUP4 PUSH3 0x4A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4ED DUP3 PUSH3 0x297 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x509 JUMPI PUSH3 0x508 PUSH3 0xAE JUMP JUMPDEST JUMPDEST PUSH3 0x515 DUP3 SLOAD PUSH3 0x2D1 JUMP JUMPDEST PUSH3 0x522 DUP3 DUP3 DUP6 PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x55A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x545 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x551 DUP6 DUP3 PUSH3 0x4C4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5C1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x56A DUP7 PUSH3 0x306 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x594 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x56D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5B4 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5B0 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11A2 DUP1 PUSH3 0x5D9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21E JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xECB JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x25B SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D5 DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBD0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x668 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x739 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBD0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x816 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x938 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x964 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x986 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x994 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA85 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB99 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC36 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5E DUP3 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xC68 DUP2 DUP6 PUSH2 0xC07 JUMP JUMPDEST SWAP4 POP PUSH2 0xC78 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC81 DUP2 PUSH2 0xC42 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCA6 DUP2 DUP5 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDE DUP3 PUSH2 0xCB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEE DUP2 PUSH2 0xCD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD0B DUP2 PUSH2 0xCE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xD11 JUMP JUMPDEST DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD41 DUP2 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD5E JUMPI PUSH2 0xD5D PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6C DUP6 DUP3 DUP7 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD7D DUP6 DUP3 DUP7 ADD PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9C DUP2 PUSH2 0xD87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDC6 DUP2 PUSH2 0xD11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE00 JUMPI PUSH2 0xDFF PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE0E DUP7 DUP3 DUP8 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE1F DUP7 DUP3 DUP8 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE30 DUP7 DUP3 DUP8 ADD PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xE86 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE95 DUP5 DUP3 DUP6 ADD PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEB3 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC2 DUP5 DUP3 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEE1 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEF0 DUP6 DUP3 DUP7 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF01 DUP6 DUP3 DUP7 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF52 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0xF0B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x19 DUP4 PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x14 DUP4 PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206578636565647320616C6C6F77616E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x21 DUP4 PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x110F DUP3 PUSH2 0xD11 JUMP JUMPDEST SWAP2 POP PUSH2 0x111A DUP4 PUSH2 0xD11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x10D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1143 DUP3 PUSH2 0xD11 JUMP JUMPDEST SWAP2 POP PUSH2 0x114E DUP4 PUSH2 0xD11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1166 JUMPI PUSH2 0x1165 PUSH2 0x10D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xEAF8EE 0xDC 0xC3 RETURNDATASIZE CALLCODE ADDMOD 0xC6 GASLIMIT BALANCE PUSH19 0x4F8C135FFBFF3564FADF1CF3A055759D6E7272 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "186:1932:2:-:0;;;557:2;533:26;;;;;;;;;;;;;;;;;;;;586:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;658:5;651:4;:12;;;;;;:::i;:::-;;682:7;673:6;:16;;;;;;:::i;:::-;;586:110;;186:1932;;7:75:3;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;186:1932:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_253": {
									"entryPoint": 3046,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_410": {
									"entryPoint": 2987,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_498": {
									"entryPoint": 732,
									"id": 498,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_403": {
									"entryPoint": 2323,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_552": {
									"entryPoint": 2108,
									"id": 552,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_420": {
									"entryPoint": 2089,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_525": {
									"entryPoint": 2489,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_415": {
									"entryPoint": 590,
									"id": 415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 3024,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_417": {
									"entryPoint": 2347,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_413": {
									"entryPoint": 974,
									"id": 413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_643": {
									"entryPoint": 980,
									"id": 643,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_469": {
									"entryPoint": 2704,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10069:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:3",
														"type": ""
													}
												],
												"src": "7:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:3",
														"type": ""
													}
												],
												"src": "112:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:3",
																"statements": []
															},
															"src": "378:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:3",
														"type": ""
													}
												],
												"src": "287:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:3",
														"type": ""
													}
												],
												"src": "539:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:3",
														"type": ""
													}
												],
												"src": "647:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:3",
														"type": ""
													}
												],
												"src": "1030:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:3",
														"type": ""
													}
												],
												"src": "1349:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:3",
														"type": ""
													}
												],
												"src": "1676:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:3",
														"type": ""
													}
												],
												"src": "1808:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:3"
															},
															"nodeType": "YulIf",
															"src": "1963:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:3",
														"type": ""
													}
												],
												"src": "1910:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:3",
														"type": ""
													}
												],
												"src": "2038:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:3",
														"type": ""
													}
												],
												"src": "2183:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:3"
															},
															"nodeType": "YulIf",
															"src": "2319:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:3",
														"type": ""
													}
												],
												"src": "2266:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:3",
														"type": ""
													}
												],
												"src": "2394:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:3"
															},
															"nodeType": "YulIf",
															"src": "2632:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:3",
														"type": ""
													}
												],
												"src": "2539:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:3",
														"type": ""
													}
												],
												"src": "3019:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:3",
														"type": ""
													}
												],
												"src": "3115:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:3",
														"type": ""
													}
												],
												"src": "3230:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:3",
														"type": ""
													}
												],
												"src": "3446:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:3",
														"type": ""
													}
												],
												"src": "3570:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:3"
															},
															"nodeType": "YulIf",
															"src": "3908:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:3",
														"type": ""
													}
												],
												"src": "3798:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:3",
														"type": ""
													}
												],
												"src": "4423:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:3",
														"type": ""
													}
												],
												"src": "4515:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:3",
														"type": ""
													}
												],
												"src": "4633:214:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:3"
															},
															"nodeType": "YulIf",
															"src": "4929:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:3",
														"type": ""
													}
												],
												"src": "4853:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:3"
															},
															"nodeType": "YulIf",
															"src": "5264:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:3",
														"type": ""
													}
												],
												"src": "5188:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5652:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5654:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5654:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:32:3"
															},
															"nodeType": "YulIf",
															"src": "5616:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5745:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5760:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5764:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5789:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5844:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5799:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5789:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5872:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5887:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5891:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5917:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5952:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5963:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5948:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5948:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5972:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5927:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5917:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5568:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5579:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5591:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5599:6:3",
														"type": ""
													}
												],
												"src": "5523:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6031:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6051:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6041:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6041:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6148:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6169:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6003:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6240:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6250:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6264:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6270:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6260:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6250:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6281:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6311:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6317:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6285:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6358:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6372:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6386:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6394:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6382:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6382:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6372:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6338:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:26:3"
															},
															"nodeType": "YulIf",
															"src": "6328:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6461:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6475:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6475:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6475:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6425:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6456:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6445:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6445:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6422:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:38:3"
															},
															"nodeType": "YulIf",
															"src": "6419:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6224:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6233:6:3",
														"type": ""
													}
												],
												"src": "6189:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6621:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6643:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6651:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6639:14:3"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e742061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6655:27:3",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6632:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6632:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6632:51:3"
														}
													]
												},
												"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6613:6:3",
														"type": ""
													}
												],
												"src": "6515:175:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6842:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6852:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6918:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6923:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6859:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6859:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6852:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7024:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																	"nodeType": "YulIdentifier",
																	"src": "6935:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6935:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6935:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7037:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7048:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7053:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7044:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7037:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6830:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6838:3:3",
														"type": ""
													}
												],
												"src": "6696:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7239:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7249:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7261:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7272:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7257:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7257:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7249:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7296:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7307:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7292:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7292:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7315:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7321:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7311:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7311:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7285:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7285:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7285:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7341:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7475:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7349:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7349:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7341:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7219:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7234:4:3",
														"type": ""
													}
												],
												"src": "7068:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7599:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7621:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7629:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7617:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7617:14:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7633:22:3",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7610:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7610:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7591:6:3",
														"type": ""
													}
												],
												"src": "7493:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7815:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7825:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7891:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7896:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7832:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7832:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7825:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7997:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "7908:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7908:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7908:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8010:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8021:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8026:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8017:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8017:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8010:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7803:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7811:3:3",
														"type": ""
													}
												],
												"src": "7669:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8212:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8222:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8234:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8245:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8230:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8230:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8222:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8269:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8280:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8265:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8265:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8288:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8294:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8284:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8284:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8258:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8258:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8258:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8314:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8448:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8322:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8322:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8314:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8192:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8207:4:3",
														"type": ""
													}
												],
												"src": "8041:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8572:114:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8594:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8602:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8590:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8590:14:3"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8606:34:3",
																		"type": "",
																		"value": "Transfer amount exceeds allowanc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8583:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8583:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8583:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8662:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8670:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8658:15:3"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8675:3:3",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8651:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8651:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8651:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8564:6:3",
														"type": ""
													}
												],
												"src": "8466:220:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8838:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8848:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8914:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8919:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8855:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8855:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8848:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9020:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7",
																	"nodeType": "YulIdentifier",
																	"src": "8931:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8931:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8931:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9033:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9044:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9049:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9040:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9040:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9033:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8826:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8834:3:3",
														"type": ""
													}
												],
												"src": "8692:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9235:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9245:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9257:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9268:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9253:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9253:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9245:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9292:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9303:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9288:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9288:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9311:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9317:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9281:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9281:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9281:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9337:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9471:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9345:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9345:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9337:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9215:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9230:4:3",
														"type": ""
													}
												],
												"src": "9064:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9517:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9534:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9537:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9527:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9527:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9631:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9634:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9624:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9624:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9655:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9658:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9648:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9648:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9648:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9489:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9720:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9730:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9753:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9735:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9735:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9730:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9764:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9787:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9769:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9769:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9764:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9798:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9810:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9813:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9806:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9806:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9798:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9840:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9842:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9842:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9842:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "9831:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9837:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9828:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9828:11:3"
															},
															"nodeType": "YulIf",
															"src": "9825:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9706:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9709:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9715:4:3",
														"type": ""
													}
												],
												"src": "9675:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9919:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9929:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9952:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9934:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9934:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9929:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9963:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9986:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9968:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9963:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9997:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10008:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10011:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10004:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10004:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10037:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10039:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10039:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10039:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10029:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10032:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10026:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10026:10:3"
															},
															"nodeType": "YulIf",
															"src": "10023:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9906:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9909:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9915:3:3",
														"type": ""
													}
												],
												"src": "9875:191:3"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer amount exceeds allowanc\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806342966c681161007157806342966c681461016857806370a082311461018457806395d89b41146101b4578063a0712d68146101d2578063a9059cbb146101ee578063dd62ed3e1461021e576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b661024e565b6040516100c39190610c8c565b60405180910390f35b6100e660048036038101906100e19190610d47565b6102dc565b6040516100f39190610da2565b60405180910390f35b6101046103ce565b6040516101119190610dcc565b60405180910390f35b610134600480360381019061012f9190610de7565b6103d4565b6040516101419190610da2565b60405180910390f35b610152610829565b60405161015f9190610e56565b60405180910390f35b610182600480360381019061017d9190610e71565b61083c565b005b61019e60048036038101906101999190610e9e565b610913565b6040516101ab9190610dcc565b60405180910390f35b6101bc61092b565b6040516101c99190610c8c565b60405180910390f35b6101ec60048036038101906101e79190610e71565b6109b9565b005b61020860048036038101906102039190610d47565b610a90565b6040516102159190610da2565b60405180910390f35b61023860048036038101906102339190610ecb565b610bab565b6040516102459190610dcc565b60405180910390f35b6003805461025b90610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461028790610f3a565b80156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103bc9190610dcc565b60405180910390a36001905092915050565b60025481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610fb7565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90611023565b60405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b906110b5565b60405180910390fd5b6105d5826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bd090919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610668826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be690919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061073982600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bd090919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108169190610dcc565b60405180910390a3600190509392505050565b600560009054906101000a900460ff1681565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088a9190611104565b9250508190555080600260008282546108a39190611104565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109089190610dcc565b60405180910390a350565b60006020528060005260406000206000915090505481565b6004805461093890610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461096490610f3a565b80156109b15780601f10610986576101008083540402835291602001916109b1565b820191906000526020600020905b81548152906001019060200180831161099457829003601f168201915b505050505081565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a079190611138565b925050819055508060026000828254610a209190611138565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a859190610dcc565b60405180910390a350565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ae09190611104565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b359190611138565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b999190610dcc565b60405180910390a36001905092915050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60008183610bde9190611104565b905092915050565b60008183610bf49190611138565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c36578082015181840152602081019050610c1b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c5e82610bfc565b610c688185610c07565b9350610c78818560208601610c18565b610c8181610c42565b840191505092915050565b60006020820190508181036000830152610ca68184610c53565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cde82610cb3565b9050919050565b610cee81610cd3565b8114610cf957600080fd5b50565b600081359050610d0b81610ce5565b92915050565b6000819050919050565b610d2481610d11565b8114610d2f57600080fd5b50565b600081359050610d4181610d1b565b92915050565b60008060408385031215610d5e57610d5d610cae565b5b6000610d6c85828601610cfc565b9250506020610d7d85828601610d32565b9150509250929050565b60008115159050919050565b610d9c81610d87565b82525050565b6000602082019050610db76000830184610d93565b92915050565b610dc681610d11565b82525050565b6000602082019050610de16000830184610dbd565b92915050565b600080600060608486031215610e0057610dff610cae565b5b6000610e0e86828701610cfc565b9350506020610e1f86828701610cfc565b9250506040610e3086828701610d32565b9150509250925092565b600060ff82169050919050565b610e5081610e3a565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b600060208284031215610e8757610e86610cae565b5b6000610e9584828501610d32565b91505092915050565b600060208284031215610eb457610eb3610cae565b5b6000610ec284828501610cfc565b91505092915050565b60008060408385031215610ee257610ee1610cae565b5b6000610ef085828601610cfc565b9250506020610f0185828601610cfc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f5257607f821691505b602082108103610f6557610f64610f0b565b5b50919050565b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b6000610fa1601983610c07565b9150610fac82610f6b565b602082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061100d601483610c07565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6360008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b600061109f602183610c07565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110f82610d11565b915061111a83610d11565b9250828203905081811115611132576111316110d5565b5b92915050565b600061114382610d11565b915061114e83610d11565b9250828201905080821115611166576111656110d5565b5b9291505056fea264697066735822122062eaf8eedcc33df208c64531724f8c135ffbff3564fadf1cf3a055759d6e727264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21E JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xECB JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x25B SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D5 DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBD0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x668 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x739 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBD0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x816 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x938 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x964 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x986 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x994 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA85 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB99 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC36 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5E DUP3 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xC68 DUP2 DUP6 PUSH2 0xC07 JUMP JUMPDEST SWAP4 POP PUSH2 0xC78 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC81 DUP2 PUSH2 0xC42 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCA6 DUP2 DUP5 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDE DUP3 PUSH2 0xCB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEE DUP2 PUSH2 0xCD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD0B DUP2 PUSH2 0xCE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xD11 JUMP JUMPDEST DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD41 DUP2 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD5E JUMPI PUSH2 0xD5D PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6C DUP6 DUP3 DUP7 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD7D DUP6 DUP3 DUP7 ADD PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9C DUP2 PUSH2 0xD87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDC6 DUP2 PUSH2 0xD11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE00 JUMPI PUSH2 0xDFF PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE0E DUP7 DUP3 DUP8 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE1F DUP7 DUP3 DUP8 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE30 DUP7 DUP3 DUP8 ADD PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xE86 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE95 DUP5 DUP3 DUP6 ADD PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEB3 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC2 DUP5 DUP3 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEE1 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEF0 DUP6 DUP3 DUP7 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF01 DUP6 DUP3 DUP7 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF52 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0xF0B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x19 DUP4 PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x14 DUP4 PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206578636565647320616C6C6F77616E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x21 DUP4 PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x110F DUP3 PUSH2 0xD11 JUMP JUMPDEST SWAP2 POP PUSH2 0x111A DUP4 PUSH2 0xD11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x10D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1143 DUP3 PUSH2 0xD11 JUMP JUMPDEST SWAP2 POP PUSH2 0x114E DUP4 PUSH2 0xD11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1166 JUMPI PUSH2 0x1165 PUSH2 0x10D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xEAF8EE 0xDC 0xC3 RETURNDATASIZE CALLCODE ADDMOD 0xC6 GASLIMIT BALANCE PUSH19 0x4F8C135FFBFF3564FADF1CF3A055759D6E7272 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "186:1932:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;455:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;954:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;392:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1521:595;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;533:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1345:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;252:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1169:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;702:246;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;954:209::-;1028:4;1077:6;1044:9;:21;1054:10;1044:21;;;;;;;;;;;;;;;:30;1066:7;1044:30;;;;;;;;;;;;;;;:39;;;;1119:7;1098:37;;1107:10;1098:37;;;1128:6;1098:37;;;;;;:::i;:::-;;;;;;;;1152:4;1145:11;;954:209;;;;:::o;392:35::-;;;;:::o;1521:595::-;1615:4;1654:1;1639:17;;:3;:17;;;1631:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:9;:16;1725:5;1715:16;;;;;;;;;;;;;;;;1705:6;:26;;1697:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1785:9;:16;1795:5;1785:16;;;;;;;;;;;;;;;:28;1802:10;1785:28;;;;;;;;;;;;;;;;1775:6;:38;;1767:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1881:28;1902:6;1881:9;:16;1891:5;1881:16;;;;;;;;;;;;;;;;:20;;:28;;;;:::i;:::-;1862:9;:16;1872:5;1862:16;;;;;;;;;;;;;;;:47;;;;1936:26;1955:6;1936:9;:14;1946:3;1936:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;1919:9;:14;1929:3;1919:14;;;;;;;;;;;;;;;:43;;;;2004:40;2037:6;2004:9;:16;2014:5;2004:16;;;;;;;;;;;;;;;:28;2021:10;2004:28;;;;;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1973:9;:16;1983:5;1973:16;;;;;;;;;;;;;;;:28;1990:10;1973:28;;;;;;;;;;;;;;;:71;;;;2076:3;2060:28;;2069:5;2060:28;;;2081:6;2060:28;;;;;;:::i;:::-;;;;;;;;2105:4;2098:11;;1521:595;;;;;:::o;533:26::-;;;;;;;;;;;;;:::o;1345:170::-;1416:6;1391:9;:21;1401:10;1391:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;1447:6;1432:11;;:21;;;;;;;:::i;:::-;;;;;;;;1497:1;1468:40;;1477:10;1468:40;;;1501:6;1468:40;;;;;;:::i;:::-;;;;;;;;1345:170;:::o;252:53::-;;;;;;;;;;;;;;;;;:::o;491:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1169:170::-;1240:6;1215:9;:21;1225:10;1215:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;1271:6;1256:11;;:21;;;;;;;:::i;:::-;;;;;;;;1313:10;1292:40;;1309:1;1292:40;;;1325:6;1292:40;;;;;;:::i;:::-;;;;;;;;1169:170;:::o;702:246::-;779:4;820:6;795:9;:21;805:10;795:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;860:6;836:9;:20;846:9;836:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;902:9;881:39;;890:10;881:39;;;913:6;881:39;;;;;;:::i;:::-;;;;;;;;937:4;930:11;;702:246;;;;:::o;312:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3122:96:1:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:99:3:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:474::-;5591:6;5599;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5901:2;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5872:118;5523:474;;;;;:::o;6003:180::-;6051:77;6048:1;6041:88;6148:4;6145:1;6138:15;6172:4;6169:1;6162:15;6189:320;6233:6;6270:1;6264:4;6260:12;6250:22;;6317:1;6311:4;6307:12;6338:18;6328:81;;6394:4;6386:6;6382:17;6372:27;;6328:81;6456:2;6448:6;6445:14;6425:18;6422:38;6419:84;;6475:18;;:::i;:::-;6419:84;6240:269;6189:320;;;:::o;6515:175::-;6655:27;6651:1;6643:6;6639:14;6632:51;6515:175;:::o;6696:366::-;6838:3;6859:67;6923:2;6918:3;6859:67;:::i;:::-;6852:74;;6935:93;7024:3;6935:93;:::i;:::-;7053:2;7048:3;7044:12;7037:19;;6696:366;;;:::o;7068:419::-;7234:4;7272:2;7261:9;7257:18;7249:26;;7321:9;7315:4;7311:20;7307:1;7296:9;7292:17;7285:47;7349:131;7475:4;7349:131;:::i;:::-;7341:139;;7068:419;;;:::o;7493:170::-;7633:22;7629:1;7621:6;7617:14;7610:46;7493:170;:::o;7669:366::-;7811:3;7832:67;7896:2;7891:3;7832:67;:::i;:::-;7825:74;;7908:93;7997:3;7908:93;:::i;:::-;8026:2;8021:3;8017:12;8010:19;;7669:366;;;:::o;8041:419::-;8207:4;8245:2;8234:9;8230:18;8222:26;;8294:9;8288:4;8284:20;8280:1;8269:9;8265:17;8258:47;8322:131;8448:4;8322:131;:::i;:::-;8314:139;;8041:419;;;:::o;8466:220::-;8606:34;8602:1;8594:6;8590:14;8583:58;8675:3;8670:2;8662:6;8658:15;8651:28;8466:220;:::o;8692:366::-;8834:3;8855:67;8919:2;8914:3;8855:67;:::i;:::-;8848:74;;8931:93;9020:3;8931:93;:::i;:::-;9049:2;9044:3;9040:12;9033:19;;8692:366;;;:::o;9064:419::-;9230:4;9268:2;9257:9;9253:18;9245:26;;9317:9;9311:4;9307:20;9303:1;9292:9;9288:17;9281:47;9345:131;9471:4;9345:131;:::i;:::-;9337:139;;9064:419;;;:::o;9489:180::-;9537:77;9534:1;9527:88;9634:4;9631:1;9624:15;9658:4;9655:1;9648:15;9675:194;9715:4;9735:20;9753:1;9735:20;:::i;:::-;9730:25;;9769:20;9787:1;9769:20;:::i;:::-;9764:25;;9813:1;9810;9806:9;9798:17;;9837:1;9831:4;9828:11;9825:37;;;9842:18;;:::i;:::-;9825:37;9675:194;;;;:::o;9875:191::-;9915:3;9934:20;9952:1;9934:20;:::i;:::-;9929:25;;9968:20;9986:1;9968:20;:::i;:::-;9963:25;;10011:1;10008;10004:9;9997:16;;10032:3;10029:1;10026:10;10023:36;;;10039:18;;:::i;:::-;10023:36;9875:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "902800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2836",
								"burn(uint256)": "infinite",
								"decimals()": "2560",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2474",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 186,
									"end": 2118,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 557,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 533,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 533,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 533,
									"end": 559,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 533,
									"end": 559,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 533,
									"end": 559,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 533,
									"end": 559,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 696,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 696,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 696,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 696,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 696,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 586,
									"end": 696,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 586,
									"end": 696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 586,
									"end": 696,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 658,
									"end": 663,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 651,
									"end": 655,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 651,
									"end": 663,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 651,
									"end": 663,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 651,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 651,
									"end": 663,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 651,
									"end": 663,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 651,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 651,
									"end": 663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 651,
									"end": 663,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 651,
									"end": 663,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 651,
									"end": 663,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 682,
									"end": 689,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 673,
									"end": 679,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 673,
									"end": 689,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 673,
									"end": 689,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 673,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 673,
									"end": 689,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 673,
									"end": 689,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 673,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 673,
									"end": 689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 673,
									"end": 689,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 673,
									"end": 689,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 673,
									"end": 689,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 586,
									"end": 696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 3,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 3,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 3,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 3,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 3,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 3,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 3,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 3,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 3,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 3,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 3,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 3,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 3,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 3,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 3,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 3,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 3,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 3,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 3,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 3,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 3,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 3,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 3,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 3,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 3,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 3,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 3,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 3,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 3,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 3,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 3,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 3,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 3,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 3,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 2118,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062eaf8eedcc33df208c64531724f8c135ffbff3564fadf1cf3a055759d6e727264736f6c63430008120033",
									".code": [
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "42966C68"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "42966C68"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "A0712D68"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 186,
											"end": 2118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 455,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 455,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 954,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 954,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 954,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 392,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 392,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1521,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1521,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1521,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 533,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 533,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1345,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 252,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 252,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 252,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 491,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 491,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1169,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 702,
											"end": 948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 702,
											"end": 948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 702,
											"end": 948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 312,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 312,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 312,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 455,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 455,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 455,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1064,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1083,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1117,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1098,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1135,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1145,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1145,
											"end": 1156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1656,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1631,
											"end": 1686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1631,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1730,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1731,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1731,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1697,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1697,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1812,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1813,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1813,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1767,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1767,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1896,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1881,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1909,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1881,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1878,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1909,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1949,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1950,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1936,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1932,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1962,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2032,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2004,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2044,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2004,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2000,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2074,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2060,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2088,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2098,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 533,
											"end": 559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 533,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1411,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1391,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1432,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1432,
											"end": 1453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1487,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1501,
											"end": 1507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1468,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1508,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 491,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 491,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1215,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1256,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1256,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1323,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1292,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1332,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 702,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 779,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 805,
											"end": 815,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 795,
											"end": 826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 795,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 795,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 795,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 860,
											"end": 866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 845,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 836,
											"end": 866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 836,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 836,
											"end": 866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 902,
											"end": 911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 890,
											"end": 900,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 913,
											"end": 919,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 881,
											"end": 920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 881,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 881,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 881,
											"end": 920,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 937,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 930,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5654,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5799,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5972,
											"end": 5979,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 5970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5927,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6128,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6129,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 6153,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6177,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6319,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6460,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6475,
											"end": 6493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6515,
											"end": 6690,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6515,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6682,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6515,
											"end": 6690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6515,
											"end": 6690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 6696,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6838,
											"end": 6841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6923,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6918,
											"end": 6921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6859,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6859,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6859,
											"end": 6926,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6859,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6935,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7024,
											"end": 7027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6935,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6935,
											"end": 7028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6935,
											"end": 7028,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 6935,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7053,
											"end": 7055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7048,
											"end": 7051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7044,
											"end": 7056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 7062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 7062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 7062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 7062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7487,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7068,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7261,
											"end": 7270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7249,
											"end": 7275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7249,
											"end": 7275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7321,
											"end": 7330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7315,
											"end": 7319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7311,
											"end": 7331,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7296,
											"end": 7305,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7292,
											"end": 7309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7285,
											"end": 7332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7349,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7475,
											"end": 7479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7349,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7349,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7349,
											"end": 7480,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7349,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7341,
											"end": 7480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7341,
											"end": 7480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7493,
											"end": 7663,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7493,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7633,
											"end": 7655,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7627,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7617,
											"end": 7631,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7493,
											"end": 7663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7493,
											"end": 7663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 8035,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 7669,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7896,
											"end": 7898,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 7891,
											"end": 7894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7832,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7832,
											"end": 7899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7832,
											"end": 7899,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7832,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 7899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 7899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7997,
											"end": 8000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7908,
											"end": 8001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 8001,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7908,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8021,
											"end": 8024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8017,
											"end": 8029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8010,
											"end": 8029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8010,
											"end": 8029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 8035,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 8035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 8035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 8035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8041,
											"end": 8460,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 8041,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8234,
											"end": 8243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8248,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8284,
											"end": 8304,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8280,
											"end": 8281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8269,
											"end": 8278,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8265,
											"end": 8282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8258,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8322,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8448,
											"end": 8452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8322,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 8322,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8322,
											"end": 8453,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8322,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8314,
											"end": 8453,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8314,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8041,
											"end": 8460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8041,
											"end": 8460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8041,
											"end": 8460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8041,
											"end": 8460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8466,
											"end": 8686,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 8466,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8606,
											"end": 8640,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E7366657220616D6F756E74206578636565647320616C6C6F77616E63"
										},
										{
											"begin": 8602,
											"end": 8603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8583,
											"end": 8641,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "6500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8670,
											"end": 8672,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8662,
											"end": 8668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8658,
											"end": 8673,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8651,
											"end": 8679,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8466,
											"end": 8686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8466,
											"end": 8686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8692,
											"end": 9058,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 8692,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8855,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8919,
											"end": 8921,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 8914,
											"end": 8917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8855,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 8855,
											"end": 8922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8855,
											"end": 8922,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8855,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8848,
											"end": 8922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8848,
											"end": 8922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8931,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 9020,
											"end": 9023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8931,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 8931,
											"end": 9024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8931,
											"end": 9024,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8931,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9049,
											"end": 9051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9040,
											"end": 9052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9033,
											"end": 9052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9033,
											"end": 9052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8692,
											"end": 9058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8692,
											"end": 9058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8692,
											"end": 9058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8692,
											"end": 9058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9483,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 9064,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9230,
											"end": 9234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9268,
											"end": 9270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9257,
											"end": 9266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9253,
											"end": 9271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9245,
											"end": 9271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9245,
											"end": 9271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9315,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9327,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9301,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9288,
											"end": 9305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9281,
											"end": 9328,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9345,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 9471,
											"end": 9475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9345,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 9345,
											"end": 9476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9345,
											"end": 9476,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 9345,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9337,
											"end": 9476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9337,
											"end": 9476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9489,
											"end": 9669,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 9489,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9537,
											"end": 9614,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9534,
											"end": 9535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9615,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9634,
											"end": 9638,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 9631,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9624,
											"end": 9639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9658,
											"end": 9662,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9655,
											"end": 9656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9663,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9675,
											"end": 9869,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 9675,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9715,
											"end": 9719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 9753,
											"end": 9754,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9735,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 9735,
											"end": 9755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9735,
											"end": 9755,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 9735,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9730,
											"end": 9755,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9730,
											"end": 9755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9769,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9787,
											"end": 9788,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9769,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 9769,
											"end": 9789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9769,
											"end": 9789,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9769,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9764,
											"end": 9789,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9764,
											"end": 9789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9810,
											"end": 9811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9806,
											"end": 9815,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9837,
											"end": 9838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9831,
											"end": 9835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9828,
											"end": 9839,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9825,
											"end": 9862,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9825,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 9825,
											"end": 9862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 9842,
											"end": 9860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9825,
											"end": 9862,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 9825,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9675,
											"end": 9869,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9675,
											"end": 9869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9675,
											"end": 9869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9675,
											"end": 9869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9675,
											"end": 9869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10066,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 9875,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9915,
											"end": 9918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9934,
											"end": 9954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9952,
											"end": 9953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9934,
											"end": 9954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 9934,
											"end": 9954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9934,
											"end": 9954,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9934,
											"end": 9954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9929,
											"end": 9954,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9929,
											"end": 9954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9968,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 9986,
											"end": 9987,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9968,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 9968,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9968,
											"end": 9988,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 9968,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9988,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10011,
											"end": 10012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10008,
											"end": 10009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10013,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9997,
											"end": 10013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9997,
											"end": 10013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10035,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10029,
											"end": 10030,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10023,
											"end": 10059,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10023,
											"end": 10059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 10023,
											"end": 10059,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 10039,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10023,
											"end": 10059,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 10023,
											"end": 10059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10066,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/1-erc20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"}},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1-erc20.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/1-erc20.sol\":{\"keccak256\":\"0x9d27993c7b2ed0b124d113606ece488dc8368952cfbf94e3b9955e59718f7e7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://12198fe339d626284d4c184652ffbed64714163fe991dcfebdf24a1a2add8c3c\",\"dweb:/ipfs/QmRBsWAaWSzV1VGP6hDUDJbdYxqytW1yRY9zphG9v1gHdG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "contracts/1-erc20.sol:MyToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 410,
								"contract": "contracts/1-erc20.sol:MyToken",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 413,
								"contract": "contracts/1-erc20.sol:MyToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 415,
								"contract": "contracts/1-erc20.sol:MyToken",
								"label": "name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 417,
								"contract": "contracts/1-erc20.sol:MyToken",
								"label": "symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 420,
								"contract": "contracts/1-erc20.sol:MyToken",
								"label": "decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"contracts/1-erc20.sol": {
				"ast": {
					"absolutePath": "contracts/1-erc20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"MyToken": [
							644
						],
						"SafeMath": [
							389
						]
					},
					"id": 645,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:32:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 78,
							"src": "70:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 390,
							"src": "127:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 394,
										"name": "IERC20",
										"nameLocations": [
											"206:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "206:6:2"
									},
									"id": 395,
									"nodeType": "InheritanceSpecifier",
									"src": "206:6:2"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								77
							],
							"name": "MyToken",
							"nameLocation": "195:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 398,
									"libraryName": {
										"id": 396,
										"name": "SafeMath",
										"nameLocations": [
											"225:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "225:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "219:27:2",
									"typeName": {
										"id": 397,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"baseFunctions": [
										34
									],
									"constant": false,
									"functionSelector": "70a08231",
									"id": 403,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "296:9:2",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 402,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "287:8:2"
									},
									"scope": 644,
									"src": "252:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 401,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 399,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "260:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "252:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 400,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "271:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 410,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "376:9:2",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 409,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "367:8:2"
									},
									"scope": 644,
									"src": "312:73:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 408,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 404,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "320:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "312:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 407,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 405,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "339:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "331:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 406,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "350:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 413,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "416:11:2",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 412,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "407:8:2"
									},
									"scope": 644,
									"src": "392:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 411,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 415,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "469:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "455:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 414,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "455:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 417,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "505:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "491:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 416,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "491:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 420,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "546:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "533:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 418,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "533:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "557:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "641:55:2",
										"statements": [
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 427,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "651:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 428,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "658:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "651:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "651:12:2"
											},
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 431,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "673:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 432,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "682:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "673:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "673:16:2"
											}
										]
									},
									"id": 436,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "598:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "598:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "633:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "619:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "619:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:44:2"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:0:2"
									},
									"scope": 644,
									"src": "586:110:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "785:163:2",
										"statements": [
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 446,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "795:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 449,
														"indexExpression": {
															"expression": {
																"id": 447,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "805:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "809:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "805:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "795:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 450,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "820:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "795:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "795:31:2"
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 453,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "836:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 455,
														"indexExpression": {
															"id": 454,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "846:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "836:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 456,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "860:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "836:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "836:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 460,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "890:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "894:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "890:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "902:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "913:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "881:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "876:44:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "937:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 445,
												"id": 467,
												"nodeType": "Return",
												"src": "930:11:2"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "711:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 442,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "761:8:2"
									},
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "728:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "720:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "744:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "739:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:32:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 644,
									"src": "702:246:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1034:129:2",
										"statements": [
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 479,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1044:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 483,
															"indexExpression": {
																"expression": {
																	"id": 480,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1054:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1058:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1054:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1044:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 484,
														"indexExpression": {
															"id": 482,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "1066:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1044:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 485,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "1077:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1044:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "1044:39:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 489,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1107:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1111:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1107:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "1119:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "1128:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 488,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1098:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1098:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "EmitStatement",
												"src": "1093:42:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1152:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 478,
												"id": 496,
												"nodeType": "Return",
												"src": "1145:11:2"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "963:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 475,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1010:8:2"
									},
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "979:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "971:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "993:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "988:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "988:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:30:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1028:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1028:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:6:2"
									},
									"scope": 644,
									"src": "954:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "1205:134:2",
										"statements": [
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 503,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1215:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 506,
														"indexExpression": {
															"expression": {
																"id": 504,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1225:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1229:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1225:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1215:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 507,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "1240:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1215:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1215:31:2"
											},
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "1256:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 511,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "1271:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1256:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "1256:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1309:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1301:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 515,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1301:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1301:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1313:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1317:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1313:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "1325:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1292:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1292:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "1287:45:2"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1178:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1188:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1183:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1183:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:13:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:0:2"
									},
									"scope": 644,
									"src": "1169:170:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "1381:134:2",
										"statements": [
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 530,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1391:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 533,
														"indexExpression": {
															"expression": {
																"id": 531,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1401:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1405:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1401:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1391:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 534,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1416:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1391:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "1391:31:2"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "1432:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 538,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1447:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1432:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 542,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1477:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1481:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1477:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1497:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1489:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1489:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1489:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "1501:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1468:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1468:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "EmitStatement",
												"src": "1463:45:2"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1354:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1364:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1359:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1359:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:13:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:2"
									},
									"scope": 644,
									"src": "1345:170:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "1621:495:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 565,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "1639:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1654:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1646:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 566,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1646:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1646:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1639:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1658:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 564,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1631:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1631:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "1631:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 575,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "1705:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 576,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1715:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 578,
																"indexExpression": {
																	"id": 577,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "1725:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1715:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1705:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1733:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1697:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1697:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "1697:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "1775:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 585,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1785:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 587,
																	"indexExpression": {
																		"id": 586,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "1795:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1785:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 590,
																"indexExpression": {
																	"expression": {
																		"id": 588,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1802:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1806:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1802:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1785:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1775:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1815:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7",
																"typeString": "literal_string \"Transfer amount exceeds allowance\""
															},
															"value": "Transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7",
																"typeString": "literal_string \"Transfer amount exceeds allowance\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1767:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1767:84:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1767:84:2"
											},
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 595,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1862:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 597,
														"indexExpression": {
															"id": 596,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "1872:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1862:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 602,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "1902:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 598,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1881:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 600,
																"indexExpression": {
																	"id": 599,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "1891:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1881:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1898:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1881:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1881:28:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1862:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "1862:47:2"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 606,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1919:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 608,
														"indexExpression": {
															"id": 607,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "1929:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1919:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 613,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "1955:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 609,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1936:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 611,
																"indexExpression": {
																	"id": 610,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "1946:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1936:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1951:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1936:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1936:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1919:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "1919:43:2"
											},
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 617,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1973:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 618,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "1983:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1973:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 622,
														"indexExpression": {
															"expression": {
																"id": 619,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1990:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1994:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1990:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1973:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 630,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "2037:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 623,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "2004:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 625,
																	"indexExpression": {
																		"id": 624,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "2014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2004:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 628,
																"indexExpression": {
																	"expression": {
																		"id": 626,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2021:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2025:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2021:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2004:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2033:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "2004:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2004:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1973:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "1973:71:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 635,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "2069:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "2076:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "2081:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2060:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "EmitStatement",
												"src": "2055:33:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2105:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 641,
												"nodeType": "Return",
												"src": "2098:11:2"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1530:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 560,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1597:8:2"
									},
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1543:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1566:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1558:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1579:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1571:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:44:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1615:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1615:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:6:2"
									},
									"scope": 644,
									"src": "1521:595:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 645,
							"src": "186:1932:2",
							"usedErrors": []
						}
					],
					"src": "36:2087:2"
				},
				"id": 2
			}
		}
	}
}